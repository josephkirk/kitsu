{"version":3,"sources":["webpack:///./src/components/pages/Playlist.vue?8942","webpack:///./src/components/pages/Playlist.vue?bf28","webpack:///./src/components/widgets/ErrorText.vue?80f2","webpack:///src/components/widgets/ErrorText.vue","webpack:///./src/components/widgets/ErrorText.vue?f04f","webpack:///./src/components/widgets/ErrorText.vue","webpack:///src/components/pages/Playlist.vue","webpack:///./src/components/pages/Playlist.vue?2e53","webpack:///./src/components/pages/Playlist.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","playlists","length","attrs","$t","sortOptions","model","value","callback","$$v","currentSort","expression","key","class","button","loading","addPlaylist","on","showAddModal","_v","_s","_e","_l","playlist","id","for_client","selected","currentPlaylist","getPlaylistPath","name","formatDate","updated_at","errors","playlistsInit","first_preview_file_id","created_at","big","ref","currentEntities","isAddingEntity","isAssetPlaylist","showEditModal","toggleAddEntities","onPreviewChanged","onTaskTypeChanged","$event","$router","push","playlistsPath","removeEntity","onOrderChange","onAnnotationChanged","onForClientChanged","isCurrentUserManager","addEntitiesText","onSearchChange","modals","isBuildFilterDisplayed","isAdditionLoading","addCurrentSelection","addDaily","addDailyPending","isTVShow","addEpisode","addEpisodePending","addMovie","directives","rawName","isShotsLoading","isAssetsLoading","typeAssets","i","asset_type_name","filter","a","canceled","asset","preventDefault","addEntityToPlaylist","preview_file_id","sequenceShots","sequence_name","sequence_id","addSequence","s","shot","playlisted","undefined","isEditDisplayed","editPlaylist","playlistToEdit","hideEditModal","confirmEditPlaylist","confirmBuildFilter","staticRenderFns","alignRight","hidden","text","props","default","type","String","Boolean","component","components","BuildFilterModal","ButtonSimple","Combobox","ErrorText","EditPlaylistModal","LightEntityThumbnail","PageSubtitle","PlaylistPlayer","PlusIcon","SearchField","Spinner","XIcon","data","sortedPlaylists","isDeleteDisplayed","addWeekly","deletePlaylist","playlistLoading","computed","for_entity","isAddSearchVisible","lastPlaylistsUpdated","lastPlaylistsCreated","slice","playlistPlayer","$refs","tvShowPageTitle","currentEpisode","episodeName","shortPageTitle","methods","loadShotsData","loadShots","loadAssetsData","displayedAssets","loadAssets","Promise","resolve","loadPlaylistsData","loadPlaylists","err","setFirstPlaylist","rebuildCurrentEntities","shots","forEach","playlistEntity","tmpEntities","$nextTick","convertEntityToPlaylistFormat","entity","assetMap","entityInfo","shotMap","parent_name","preview_files","preview_file_extension","preview_file_task_id","preview_file_annotations","preview_file_previews","setCurrentPlaylist","loadPlaylist","console","error","currentShots","addEntity","loadEntityPreviewFiles","addToStorePlaylistAndSave","pushEntityToPlaylist","previewFiles","addToPlayerPlaylist","entityList","removeEntityPreviewFromPlaylist","clearCurrentPlaylist","resetPlaylist","$options","silent","addEntities","addAllPending","getPending","reverse","entities","changePlaylistPreview","previewFileId","changePlaylistOrder","info","updatePreviewAnnotation","setValue","query","searchQuery","setAssetSearch","displayMoreAssets","setShotSearch","displayMoreShots","forClient","runAddPlaylist","form","production_id","currentProduction","is_for_all","newPlaylist","episode_id","runEditPlaylist","Object","assign","goFirstPlaylist","params","playlist_id","changePlaylistType","taskTypeId","onBodyScroll","maxHeight","position","scrollTop","resetSorting","includes","order","reloadAll","mounted","localStorage","getItem","watch","$route","$store","commit","setItem","socket","events","playlistMap","eventData","refreshPlaylist","build_jobs","build_job_id","status","metaInfo"],"mappings":"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","file":"js/chunk-ce1d7ae0.72f701b8.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=style&index=0&id=6698cc74&lang=scss&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"productions page fixed-page\"},[_c('div',{staticClass:\"columns\"},[(_vm.playlists.length > 0)?_c('div',{staticClass:\"playlist-list-column column\"},[_c('div',[_c('combobox',{attrs:{\"label\":_vm.$t('main.sorted_by'),\"options\":_vm.sortOptions,\"thin\":true,\"locale-key-prefix\":\"playlists.fields.\"},model:{value:(_vm.currentSort),callback:function ($$v) {_vm.currentSort=$$v},expression:\"currentSort\"}})],1),(_vm.isCurrentUserManager)?_c('button',{key:\"new-playlist-button\",class:{\n          button: true,\n          'is-loading': _vm.loading.addPlaylist\n        },on:{\"click\":_vm.showAddModal}},[_c('plus-icon',{staticClass:\"icon is-small\"}),_vm._v(\" \"+_vm._s(_vm.$t('playlists.new_playlist'))+\" \")],1):_vm._e(),(!_vm.loading.playlists)?_c('div',{staticClass:\"playlists\"},_vm._l((_vm.sortedPlaylists),function(playlist){return _c('router-link',{key:playlist.id,class:{\n            'playlist-item': true,\n            'for-client': playlist.for_client || false,\n            selected: playlist.id === _vm.currentPlaylist.id\n          },attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('span',[_vm._v(\" \"+_vm._s(playlist.name)+\" \")]),_c('span',{staticClass:\"playlist-date\",attrs:{\"title\":\"last modified\"}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.updated_at'))+\" \"+_vm._s(_vm.formatDate(playlist.updated_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"}),(_vm.errors.playlistLoading)?_c('error-text',{attrs:{\"text\":\"$t('playlists.loading_error')\"}}):_vm._e()],1):_vm._e(),(_vm.playlists.length > 0 && !_vm.currentPlaylist.id && !_vm.loading.playlist)?_c('div',{staticClass:\"playlist-column no-selection\"},[_c('h2',[_vm._v(_vm._s(_vm.$t('playlists.last_creation')))]),(!_vm.loading.playlists && !_vm.loading.playlistsInit)?_c('div',{staticClass:\"flexrow\"},_vm._l((_vm.lastPlaylistsCreated),function(playlist){return _c('router-link',{key:'recent-playlist-' + playlist.id,staticClass:\"recent-playlist flexrow-item\",attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auto\",\"max-width\":\"300px\",\"max-height\":\"150px\",\"empty-height\":\"150px\"}})],1),_c('h3',[_vm._v(_vm._s(playlist.name))]),_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('playlists.created_at'))+\" \"+_vm._s(_vm.formatDate(playlist.created_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"}),_c('h2',[_vm._v(_vm._s(_vm.$t('playlists.last_modification')))]),(!_vm.loading.playlists)?_c('div',{staticClass:\"flexrow\"},_vm._l((_vm.lastPlaylistsUpdated),function(playlist){return _c('router-link',{key:'recent-modified-playlist-' + playlist.id,staticClass:\"recent-playlist flexrow-item\",attrs:{\"to\":_vm.getPlaylistPath(playlist.id)}},[_c('div',{staticClass:\"has-text-centered\"},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":playlist.first_preview_file_id,\"type\":\"previews\",\"width\":\"auto\",\"height\":\"auot\",\"max-width\":\"300px\",\"max-height\":\"150px\",\"empty-height\":\"150px\"}})],1),_c('h3',[_vm._v(_vm._s(playlist.name))]),_c('span',[_vm._v(\" \"+_vm._s(_vm.$t('playlists.updated_at'))+\" \"+_vm._s(_vm.formatDate(playlist.updated_at))+\" \")])])}),1):_c('spinner',{staticClass:\"mt2\"})],1):(_vm.playlists.length === 0)?_c('div',{staticClass:\"playlist-column no-selection has-text-centered\"},[(!_vm.loading.playlists && !_vm.loading.playlistsInit)?_c('div',[_c('p',{staticClass:\"empty-explaination\"},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.no_playlist'))+\" \")]),(_vm.isCurrentUserManager)?_c('button',{key:\"new-playlist-button\",class:{\n            big: true,\n            button: true,\n            'is-loading': _vm.loading.addPlaylist\n          },on:{\"click\":_vm.showAddModal}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.new_playlist'))+\" \")]):_vm._e()]):_c('spinner',{staticClass:\"mt2\"})],1):_c('div',{staticClass:\"playlist-column column\"},[_c('playlist-player',{ref:\"playlist-player\",attrs:{\"playlist\":_vm.currentPlaylist,\"entities\":_vm.currentEntities,\"is-loading\":_vm.loading.playlist,\"is-adding-entity\":_vm.isAddingEntity,\"is-asset-playlist\":_vm.isAssetPlaylist},on:{\"edit-clicked\":_vm.showEditModal,\"show-add-entities\":_vm.toggleAddEntities,\"preview-changed\":_vm.onPreviewChanged,\"task-type-changed\":_vm.onTaskTypeChanged,\"playlist-deleted\":function($event){return _vm.$router.push(_vm.playlistsPath)},\"remove-entity\":_vm.removeEntity,\"order-change\":_vm.onOrderChange,\"annotationchanged\":_vm.onAnnotationChanged,\"for-client-changed\":_vm.onForClientChanged}}),(_vm.isCurrentUserManager && _vm.isAddingEntity && !_vm.loading.playlist)?_c('div',[_c('div',{staticClass:\"addition-header\"},[_c('div',{staticClass:\"flexrow\"},[_c('page-subtitle',{staticClass:\"flexrow-item\",attrs:{\"text\":_vm.addEntitiesText}}),_c('span',{staticClass:\"filler\"}),_c('a',{staticClass:\"close-button\",on:{\"click\":_vm.toggleAddEntities}},[_c('x-icon')],1)],1),_c('div',{staticClass:\"flexrow\"},[_c('search-field',{ref:\"search-field\",staticClass:\"flexrow-item\",attrs:{\"can-save\":false,\"placeholder\":_vm.isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'},on:{\"change\":_vm.onSearchChange}}),_c('button-simple',{staticClass:\"flexrow-item\",attrs:{\"title\":_vm.$t('entities.build_filter.title'),\"icon\":\"funnel\"},on:{\"click\":function($event){_vm.modals.isBuildFilterDisplayed = true}}}),(_vm.isAddSearchVisible)?_c('button',{class:{\n                button: true,\n                'flexrow-item': true,\n                'add-sequence': true\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addCurrentSelection}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_selection'))+\" \")]):_vm._e(),_c('span',{staticClass:\"filler\"}),(!_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addDaily\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addDailyPending}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.build_daily'))+\" \")]):_vm._e(),(_vm.isTVShow && !_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addEpisode\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addEpisodePending}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_episode'))+\" \")]):(!_vm.isAssetPlaylist)?_c('button',{class:{\n                button: true,\n                'add-sequence': true,\n                'is-loading': this.loading.addMovie\n              },attrs:{\"disabled\":_vm.isAdditionLoading},on:{\"click\":_vm.addMovie}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_movie'))+\" \")]):_vm._e()],1)])]):_vm._e(),(_vm.isCurrentUserManager && _vm.isAddingEntity)?_c('div',{directives:[{name:\"scroll\",rawName:\"v-scroll\",value:(_vm.onBodyScroll),expression:\"onBodyScroll\"}],staticClass:\"addition-section\"},[(_vm.isShotsLoading || _vm.isAssetsLoading)?_c('spinner',{key:\"entity-loader\",staticClass:\"mt2\"}):_c('div',{ref:\"entityListContent\"},[(_vm.isAssetPlaylist)?_c('div',_vm._l((_vm.displayedAssetsByType),function(typeAssets,i){return _c('div',{key:'asset-type-' + i},[(typeAssets.length > 0)?_c('h2',{staticClass:\"entity-group-title\"},[_vm._v(\" \"+_vm._s(typeAssets[0].asset_type_name)+\" \")]):_vm._e(),_c('div',{staticClass:\"addition-entities\"},_vm._l((typeAssets.filter(function (a) { return !a.canceled; })),function(asset){return _c('div',{key:asset.id,class:{\n                    'addition-shot': true\n                  },on:{\"click\":function($event){$event.preventDefault();return _vm.addEntityToPlaylist(asset)}}},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":asset.preview_file_id,\"width\":\"150px\",\"height\":\"100px\"}}),_c('span',{staticClass:\"playlisted-shot-name\"},[_vm._v(_vm._s(asset.name))])],1)}),0)])}),0):_c('div',_vm._l((_vm.displayedShotsBySequence),function(sequenceShots,i){return _c('div',{key:'sequence-' + i},[(sequenceShots.length > 0)?_c('h2',{staticClass:\"entity-group-title\"},[_vm._v(\" \"+_vm._s(sequenceShots[0].sequence_name)+\" \"),(_vm.isCurrentUserManager)?_c('button',{key:'add-sequence-button-' + sequenceShots[0].sequence_id,staticClass:\"button\",on:{\"click\":function($event){return _vm.addSequence(sequenceShots)}}},[_vm._v(\" \"+_vm._s(_vm.$t('playlists.add_sequence'))+\" \")]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"addition-entities\"},_vm._l((sequenceShots.filter(function (s) { return !s.canceled; })),function(shot){return _c('div',{key:shot.id,class:{\n                    'addition-shot': true,\n                    playlisted: _vm.currentEntities[shot.id] !== undefined\n                  },on:{\"click\":function($event){$event.preventDefault();return _vm.addEntityToPlaylist(shot)}}},[_c('light-entity-thumbnail',{attrs:{\"preview-file-id\":shot.preview_file_id,\"width\":\"150px\",\"height\":\"100px\"}}),_c('span',{staticClass:\"playlisted-shot-name\"},[_vm._v(_vm._s(shot.name))])],1)}),0)])}),0)])],1):_vm._e()],1)]),_c('edit-playlist-modal',{ref:\"edit-playlist-modal\",attrs:{\"active\":_vm.modals.isEditDisplayed,\"is-loading\":_vm.loading.editPlaylist,\"is-error\":_vm.errors.editPlaylist,\"playlist-to-edit\":_vm.playlistToEdit},on:{\"cancel\":_vm.hideEditModal,\"confirm\":_vm.confirmEditPlaylist}}),_c('build-filter-modal',{ref:\"build-filter-modal\",attrs:{\"active\":_vm.modals.isBuildFilterDisplayed,\"entity-type\":_vm.isAssetPlaylist ? 'asset' : 'shot'},on:{\"confirm\":_vm.confirmBuildFilter,\"cancel\":function($event){_vm.modals.isBuildFilterDisplayed = false}}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('p',{class:{\r\n  'error': true,\r\n  'has-text-right': _vm.alignRight,\r\n  'is-hidden': _vm.hidden\r\n}},[_vm._v(\" \"+_vm._s(_vm.text)+\" \")])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n<p :class=\"{\r\n  'error': true,\r\n  'has-text-right': alignRight,\r\n  'is-hidden': hidden\r\n}\">\r\n  {{ text }}\r\n</p>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'error-text',\r\n  props: {\r\n    text: {\r\n      default: '',\r\n      type: String\r\n    },\r\n    hidden: {\r\n      default: false,\r\n      type: Boolean\r\n    },\r\n    alignRight: {\r\n      default: false,\r\n      type: Boolean\r\n    }\r\n  }\r\n}\r\n</script>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ErrorText.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./ErrorText.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./ErrorText.vue?vue&type=template&id=1338c033&\"\nimport script from \"./ErrorText.vue?vue&type=script&lang=js&\"\nexport * from \"./ErrorText.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\r\n  <div class=\"productions page fixed-page\">\r\n    <div class=\"columns\">\r\n      <div class=\"playlist-list-column column\" v-if=\"playlists.length > 0\">\r\n\r\n        <div>\r\n          <combobox\r\n            :label=\"$t('main.sorted_by')\"\r\n            :options=\"sortOptions\"\r\n            :thin=\"true\"\r\n            locale-key-prefix=\"playlists.fields.\"\r\n            v-model=\"currentSort\"\r\n          />\r\n        </div>\r\n\r\n        <button\r\n          :class=\"{\r\n            button: true,\r\n            'is-loading': loading.addPlaylist\r\n          }\"\r\n          @click=\"showAddModal\"\r\n          key=\"new-playlist-button\"\r\n          v-if=\"isCurrentUserManager\"\r\n        >\r\n          <plus-icon class=\"icon is-small\" />\r\n          {{ $t('playlists.new_playlist') }}\r\n        </button>\r\n\r\n        <div\r\n          class=\"playlists\"\r\n          v-if=\"!loading.playlists\"\r\n        >\r\n          <router-link\r\n            :key=\"playlist.id\"\r\n            :to=\"getPlaylistPath(playlist.id)\"\r\n            :class=\"{\r\n              'playlist-item': true,\r\n              'for-client': playlist.for_client || false,\r\n              selected: playlist.id === currentPlaylist.id\r\n            }\"\r\n            v-for=\"playlist in sortedPlaylists\"\r\n          >\r\n            <span>\r\n              {{ playlist.name }}\r\n            </span>\r\n            <span class=\"playlist-date\" title=\"last modified\">\r\n              {{ $t('playlists.updated_at') }}\r\n              {{ formatDate(playlist.updated_at) }}\r\n            </span>\r\n          </router-link>\r\n        </div>\r\n        <spinner\r\n          class=\"mt2\"\r\n          v-else\r\n        />\r\n        <error-text\r\n          text=\"$t('playlists.loading_error')\"\r\n          v-if=\"errors.playlistLoading\"\r\n        />\r\n      </div>\r\n\r\n      <div\r\n        class=\"playlist-column no-selection\"\r\n        v-if=\"playlists.length > 0 && !currentPlaylist.id && !loading.playlist\"\r\n      >\r\n        <h2>{{ $t('playlists.last_creation') }}</h2>\r\n        <div class=\"flexrow\" v-if=\"!loading.playlists && !loading.playlistsInit\">\r\n          <router-link\r\n            class=\"recent-playlist flexrow-item\"\r\n            :key=\"'recent-playlist-' + playlist.id\"\r\n            :to=\"getPlaylistPath(playlist.id)\"\r\n            v-for=\"playlist in lastPlaylistsCreated\"\r\n          >\r\n            <div class=\"has-text-centered\">\r\n              <light-entity-thumbnail\r\n                :preview-file-id=\"playlist.first_preview_file_id\"\r\n                type=\"previews\"\r\n                width=\"auto\"\r\n                height=\"auto\"\r\n                max-width=\"300px\"\r\n                max-height=\"150px\"\r\n                empty-height=\"150px\"\r\n              />\r\n            </div>\r\n            <h3>{{ playlist.name }}</h3>\r\n            <span>\r\n              {{ $t('playlists.created_at') }}\r\n              {{ formatDate(playlist.created_at) }}\r\n            </span>\r\n          </router-link>\r\n        </div>\r\n        <spinner class=\"mt2\" v-else />\r\n\r\n        <h2>{{ $t('playlists.last_modification') }}</h2>\r\n        <div class=\"flexrow\" v-if=\"!loading.playlists\">\r\n          <router-link\r\n            class=\"recent-playlist flexrow-item\"\r\n            :key=\"'recent-modified-playlist-' + playlist.id\"\r\n            :to=\"getPlaylistPath(playlist.id)\"\r\n            v-for=\"playlist in lastPlaylistsUpdated\"\r\n          >\r\n            <div class=\"has-text-centered\">\r\n              <light-entity-thumbnail\r\n                :preview-file-id=\"playlist.first_preview_file_id\"\r\n                type=\"previews\"\r\n                width=\"auto\"\r\n                height=\"auot\"\r\n                max-width=\"300px\"\r\n                max-height=\"150px\"\r\n                empty-height=\"150px\"\r\n              />\r\n            </div>\r\n            <h3>{{ playlist.name }}</h3>\r\n            <span>\r\n              {{ $t('playlists.updated_at') }}\r\n              {{ formatDate(playlist.updated_at) }}\r\n            </span>\r\n          </router-link>\r\n        </div>\r\n        <spinner class=\"mt2\" v-else />\r\n      </div>\r\n      <div\r\n        class=\"playlist-column no-selection has-text-centered\"\r\n        v-else-if=\"playlists.length === 0\"\r\n      >\r\n        <div v-if=\"!loading.playlists && !loading.playlistsInit\">\r\n          <p class=\"empty-explaination\">\r\n            {{ $t('playlists.no_playlist') }}\r\n          </p>\r\n          <button\r\n            :class=\"{\r\n              big: true,\r\n              button: true,\r\n              'is-loading': loading.addPlaylist\r\n            }\"\r\n            @click=\"showAddModal\"\r\n            key=\"new-playlist-button\"\r\n            v-if=\"isCurrentUserManager\"\r\n          >\r\n            {{ $t('playlists.new_playlist') }}\r\n          </button>\r\n        </div>\r\n        <spinner class=\"mt2\" v-else />\r\n      </div>\r\n\r\n      <div class=\"playlist-column column\" v-else>\r\n        <playlist-player\r\n          ref=\"playlist-player\"\r\n          :playlist=\"currentPlaylist\"\r\n          :entities=\"currentEntities\"\r\n          :is-loading=\"loading.playlist\"\r\n          :is-adding-entity=\"isAddingEntity\"\r\n          :is-asset-playlist=\"isAssetPlaylist\"\r\n          @edit-clicked=\"showEditModal\"\r\n          @show-add-entities=\"toggleAddEntities\"\r\n          @preview-changed=\"onPreviewChanged\"\r\n          @task-type-changed=\"onTaskTypeChanged\"\r\n          @playlist-deleted=\"$router.push(playlistsPath)\"\r\n          @remove-entity=\"removeEntity\"\r\n          @order-change=\"onOrderChange\"\r\n          @annotationchanged=\"onAnnotationChanged\"\r\n          @for-client-changed=\"onForClientChanged\"\r\n        />\r\n\r\n        <div\r\n          v-if=\"isCurrentUserManager && isAddingEntity && !loading.playlist\"\r\n        >\r\n          <div class=\"addition-header\">\r\n            <div class=\"flexrow\">\r\n              <page-subtitle\r\n                class=\"flexrow-item\"\r\n                :text=\"addEntitiesText\"\r\n              />\r\n              <span class=\"filler\"></span>\r\n              <a\r\n                class=\"close-button\"\r\n                @click=\"toggleAddEntities\"\r\n              >\r\n                <x-icon />\r\n              </a>\r\n            </div>\r\n            <div class=\"flexrow\">\r\n              <search-field\r\n                class=\"flexrow-item\"\r\n                ref=\"search-field\"\r\n                :can-save=\"false\"\r\n                @change=\"onSearchChange\"\r\n                :placeholder=\"isAssetPlaylist ? 'chars mode=wfa' : 'ex: seq01 anim=wfa'\"\r\n              />\r\n              <button-simple\r\n                class=\"flexrow-item\"\r\n                :title=\"$t('entities.build_filter.title')\"\r\n                icon=\"funnel\"\r\n                @click=\"modals.isBuildFilterDisplayed = true\"\r\n              />\r\n              <button\r\n                :class=\"{\r\n                  button: true,\r\n                  'flexrow-item': true,\r\n                  'add-sequence': true\r\n                }\"\r\n                :disabled=\"isAdditionLoading\"\r\n                @click=\"addCurrentSelection\"\r\n                v-if=\"isAddSearchVisible\"\r\n              >\r\n                {{ $t('playlists.add_selection') }}\r\n              </button>\r\n              <span class=\"filler\"></span>\r\n              <button\r\n                :class=\"{\r\n                  button: true,\r\n                  'add-sequence': true,\r\n                  'is-loading': this.loading.addDaily\r\n                }\"\r\n                :disabled=\"isAdditionLoading\"\r\n                @click=\"addDailyPending\"\r\n                v-if=\"!isAssetPlaylist\"\r\n              >\r\n                {{ $t('playlists.build_daily') }}\r\n              </button>\r\n              <button\r\n                :class=\"{\r\n                  button: true,\r\n                  'add-sequence': true,\r\n                  'is-loading': this.loading.addEpisode\r\n                }\"\r\n                :disabled=\"isAdditionLoading\"\r\n                @click=\"addEpisodePending\"\r\n                v-if=\"isTVShow && !isAssetPlaylist\"\r\n              >\r\n                {{ $t('playlists.add_episode') }}\r\n              </button>\r\n              <button\r\n                :class=\"{\r\n                  button: true,\r\n                  'add-sequence': true,\r\n                  'is-loading': this.loading.addMovie\r\n                }\"\r\n                :disabled=\"isAdditionLoading\"\r\n                @click=\"addMovie\"\r\n                v-else-if=\"!isAssetPlaylist\"\r\n              >\r\n                {{ $t('playlists.add_movie') }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          class=\"addition-section\"\r\n          v-if=\"isCurrentUserManager && isAddingEntity\"\r\n          v-scroll=\"onBodyScroll\"\r\n        >\r\n          <spinner\r\n            class=\"mt2\"\r\n            key=\"entity-loader\"\r\n            v-if=\"isShotsLoading || isAssetsLoading\"\r\n          />\r\n          <div\r\n            ref=\"entityListContent\"\r\n            v-else\r\n          >\r\n            <div v-if=\"isAssetPlaylist\">\r\n              <div\r\n                :key=\"'asset-type-' + i\"\r\n                v-for=\"(typeAssets, i) in displayedAssetsByType\"\r\n              >\r\n                <h2\r\n                  class=\"entity-group-title\"\r\n                  v-if=\"typeAssets.length > 0\"\r\n                >\r\n                  {{ typeAssets[0].asset_type_name }}\r\n                </h2>\r\n                <div\r\n                 class=\"addition-entities\"\r\n                >\r\n                  <div\r\n                    :class=\"{\r\n                      'addition-shot': true\r\n                    }\"\r\n                    :key=\"asset.id\"\r\n                    @click.prevent=\"addEntityToPlaylist(asset)\"\r\n                    v-for=\"asset in typeAssets.filter(a => !a.canceled)\"\r\n                  >\r\n                      <light-entity-thumbnail\r\n                        :preview-file-id=\"asset.preview_file_id\"\r\n                        width=\"150px\"\r\n                        height=\"100px\"\r\n                      />\r\n                    <span class=\"playlisted-shot-name\">{{ asset.name }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div v-else>\r\n              <div\r\n                :key=\"'sequence-' + i\"\r\n                v-for=\"(sequenceShots, i) in displayedShotsBySequence\"\r\n              >\r\n                <h2\r\n                  class=\"entity-group-title\"\r\n                  v-if=\"sequenceShots.length > 0\"\r\n                >\r\n                  {{ sequenceShots[0].sequence_name }}\r\n                  <button\r\n                    class=\"button\"\r\n                    @click=\"addSequence(sequenceShots)\"\r\n                    :key=\"'add-sequence-button-' + sequenceShots[0].sequence_id\"\r\n                    v-if=\"isCurrentUserManager\"\r\n                  >\r\n                    {{ $t('playlists.add_sequence') }}\r\n                  </button>\r\n                </h2>\r\n                <div\r\n                 class=\"addition-entities\"\r\n                >\r\n                  <div\r\n                    :class=\"{\r\n                      'addition-shot': true,\r\n                      playlisted: currentEntities[shot.id] !== undefined\r\n                    }\"\r\n                    :key=\"shot.id\"\r\n                    @click.prevent=\"addEntityToPlaylist(shot)\"\r\n                    v-for=\"shot in sequenceShots.filter(s => !s.canceled)\"\r\n                  >\r\n                      <light-entity-thumbnail\r\n                        :preview-file-id=\"shot.preview_file_id\"\r\n                        width=\"150px\"\r\n                        height=\"100px\"\r\n                      />\r\n                    <span class=\"playlisted-shot-name\">{{ shot.name }}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <edit-playlist-modal\r\n      ref=\"edit-playlist-modal\"\r\n      :active=\"modals.isEditDisplayed\"\r\n      :is-loading=\"loading.editPlaylist\"\r\n      :is-error=\"errors.editPlaylist\"\r\n      :playlist-to-edit=\"playlistToEdit\"\r\n      @cancel=\"hideEditModal\"\r\n      @confirm=\"confirmEditPlaylist\"\r\n    />\r\n\r\n    <build-filter-modal\r\n      ref=\"build-filter-modal\"\r\n      :active=\"modals.isBuildFilterDisplayed\"\r\n      :entity-type=\"isAssetPlaylist ? 'asset' : 'shot'\"\r\n      @confirm=\"confirmBuildFilter\"\r\n      @cancel=\"modals.isBuildFilterDisplayed = false\"\r\n    />\r\n  </div>\r\n</template>\r\n<script>\r\nimport firstBy from 'thenby'\r\nimport moment from 'moment-timezone'\r\nimport { mapGetters, mapActions } from 'vuex'\r\nimport { PlusIcon, XIcon } from 'vue-feather-icons'\r\nimport { formatDate } from '@/lib/time'\r\nimport { getPlaylistPath } from '@/lib/path'\r\nimport {\r\n  updateModelFromList,\r\n  removeModelFromList\r\n} from '@/lib/models'\r\n\r\nimport ButtonSimple from '@/components/widgets/ButtonSimple'\r\nimport BuildFilterModal from '@/components/modals/BuildFilterModal'\r\nimport Combobox from '@/components/widgets/Combobox'\r\nimport EditPlaylistModal from '@/components/modals/EditPlaylistModal'\r\nimport ErrorText from '@/components/widgets/ErrorText'\r\nimport LightEntityThumbnail from '@/components/widgets/LightEntityThumbnail'\r\nimport PageSubtitle from '@/components/widgets/PageSubtitle'\r\nimport PlaylistPlayer from './playlists/PlaylistPlayer'\r\nimport SearchField from '@/components/widgets/SearchField'\r\nimport Spinner from '@/components/widgets/Spinner'\r\n\r\nexport default {\r\n  name: 'productions',\r\n\r\n  components: {\r\n    BuildFilterModal,\r\n    ButtonSimple,\r\n    Combobox,\r\n    ErrorText,\r\n    EditPlaylistModal,\r\n    LightEntityThumbnail,\r\n    PageSubtitle,\r\n    PlaylistPlayer,\r\n    PlusIcon,\r\n    SearchField,\r\n    Spinner,\r\n    XIcon\r\n  },\r\n\r\n  data () {\r\n    return {\r\n      currentPlaylist: { name: '' },\r\n      currentSort: 'updated_at',\r\n      sortOptions: [\r\n        'updated_at',\r\n        'created_at',\r\n        'name'\r\n      ].map(name => ({ label: name, value: name })),\r\n      currentEntities: {},\r\n      isAddingEntity: false,\r\n      sortedPlaylists: [],\r\n      playlistToEdit: {\r\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\r\n        for_client: false\r\n      },\r\n      modals: {\r\n        isBuildFilterDisplayed: false,\r\n        isDeleteDisplayed: false,\r\n        isEditDisplayed: false\r\n      },\r\n      loading: {\r\n        addPlaylist: false,\r\n        addDaily: false,\r\n        addEpisode: false,\r\n        addMovie: false,\r\n        addSequence: false,\r\n        addWeekly: false,\r\n        deletePlaylist: false,\r\n        editPlaylist: false,\r\n        playlist: false,\r\n        playlists: false,\r\n        playlistsInit: true\r\n      },\r\n      errors: {\r\n        addPlaylist: false,\r\n        editPlaylist: false,\r\n        deletePlaylist: false,\r\n        playlistLoading: false\r\n      }\r\n    }\r\n  },\r\n\r\n  computed: {\r\n    ...mapGetters([\r\n      'assetMap',\r\n      'assetSearchText',\r\n      'currentEpisode',\r\n      'currentProduction',\r\n      'displayedAssets',\r\n      'displayedAssetsByType',\r\n      'displayedShots',\r\n      'displayedShotsBySequence',\r\n      'isAssetsLoading',\r\n      'isCurrentUserManager',\r\n      'isShotsLoading',\r\n      'isTVShow',\r\n      'playlistMap',\r\n      'playlists',\r\n      'playlistsPath',\r\n      'shotsByEpisode',\r\n      'shotSearchText',\r\n      'shotMap',\r\n      'taskTypeMap'\r\n    ]),\r\n\r\n    isAdditionLoading () {\r\n      return (\r\n        this.loading.addSequence ||\r\n        this.loading.addWeekly ||\r\n        this.loading.addDaily ||\r\n        this.loading.addEpisode\r\n      )\r\n    },\r\n\r\n    isAssetPlaylist () {\r\n      return this.currentPlaylist.for_entity === 'asset'\r\n    },\r\n\r\n    isAddSearchVisible () {\r\n      return (\r\n        (this.isAssetPlaylist && this.assetSearchText) ||\r\n        (!this.isAssetPlaylist && this.shotSearchText)\r\n      )\r\n    },\r\n\r\n    lastPlaylistsUpdated () {\r\n      return this.playlists\r\n        .concat()\r\n        .sort(firstBy('updated_at'))\r\n        .reverse()\r\n        .slice(0, 3)\r\n    },\r\n\r\n    lastPlaylistsCreated () {\r\n      return this.playlists.slice(0, 3)\r\n    },\r\n\r\n    playlistPlayer () {\r\n      return this.$refs['playlist-player']\r\n    },\r\n\r\n    addEntitiesText () {\r\n      if (this.isAssetPlaylist) {\r\n        return this.$t('playlists.add_assets')\r\n      } else {\r\n        return this.$t('playlists.add_shots')\r\n      }\r\n    },\r\n\r\n    tvShowPageTitle () {\r\n      const productionName =\r\n        this.currentProduction ? this.currentProduction.name : ''\r\n      let episodeName = ''\r\n      if (this.currentEpisode) {\r\n        episodeName = this.currentEpisode.name\r\n        if (this.currentEpisode.id === 'all') episodeName = this.$t('main.all')\r\n        if (this.currentEpisode.id === 'main') episodeName = 'Main Pack'\r\n      }\r\n      return `${productionName} - ${episodeName}` +\r\n             ` | ${this.$t('playlists.title')} - Kitsu`\r\n    },\r\n\r\n    shortPageTitle () {\r\n      const productionName =\r\n        this.currentProduction ? this.currentProduction.name : ''\r\n      return `${productionName} ${this.$t('playlists.title')} - Kitsu`\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    ...mapActions([\r\n      'addNewBuildJob',\r\n      'pushEntityToPlaylist',\r\n      'changePlaylistOrder',\r\n      'changePlaylistPreview',\r\n      'changePlaylistType',\r\n      'displayMoreAssets',\r\n      'displayMoreShots',\r\n      'editPlaylist',\r\n      'getPending',\r\n      'loadPlaylist',\r\n      'loadPlaylists',\r\n      'loadEntityPreviewFiles',\r\n      'loadShots',\r\n      'loadAssets',\r\n      'markBuildJobAsDone',\r\n      'newPlaylist',\r\n      'refreshPlaylist',\r\n      'removeEntityPreviewFromPlaylist',\r\n      'removeBuildJobFromList',\r\n      'setAssetSearch',\r\n      'setCurrentEpisode',\r\n      'setShotSearch',\r\n      'updatePreviewAnnotation'\r\n    ]),\r\n\r\n    // Helpers\r\n\r\n    formatDate (dateString) {\r\n      return formatDate(dateString)\r\n    },\r\n\r\n    getPlaylistPath (playlistId, section) {\r\n      return getPlaylistPath(\r\n        this.currentProduction.id,\r\n        this.currentEpisode ? this.currentEpisode.id : null,\r\n        playlistId,\r\n        section\r\n      )\r\n    },\r\n\r\n    // Data loading\r\n\r\n    loadShotsData (callback) {\r\n      if (\r\n        this.displayedShots.length === 0 ||\r\n        this.displayedShots[0].project_id !== this.currentProduction.id ||\r\n        (\r\n          this.currentEpisode &&\r\n          this.displayedShots[0].episode_id !== this.currentEpisode.id\r\n        )\r\n      ) {\r\n        if (this.isTVShow &&\r\n            this.currentEpisode &&\r\n            (this.currentEpisode.id === 'main' ||\r\n            this.currentEpisode.id === 'all')) {\r\n          callback()\r\n        } else {\r\n          this.loadShots(callback)\r\n        }\r\n      } else {\r\n        callback()\r\n      }\r\n    },\r\n\r\n    loadAssetsData (callback) {\r\n      if (this.isTVShow || this.displayedAssets.length === 0) {\r\n        return this.loadAssets()\r\n      } else {\r\n        return Promise.resolve()\r\n      }\r\n    },\r\n\r\n    loadPlaylistsData (callback) {\r\n      const setFirstPlaylist = () => {\r\n        this.setCurrentPlaylist(() => {\r\n          if (!this.currentPlaylist || !this.currentPlaylist.id) {\r\n            this.goFirstPlaylist()\r\n          }\r\n        })\r\n      }\r\n      if (this.playlists.length === 0) {\r\n        this.loadPlaylists((err) => {\r\n          if (err) this.errors.loadPlaylists = true\r\n          if (!err) setFirstPlaylist()\r\n          if (callback) callback()\r\n        })\r\n      } else {\r\n        setFirstPlaylist()\r\n        if (callback) callback()\r\n      }\r\n    },\r\n\r\n    // Playlist build\r\n\r\n    rebuildCurrentEntities () {\r\n      this.currentEntities = {}\r\n      const tmpEntities = {}\r\n      if (this.currentPlaylist && this.currentPlaylist.shots) {\r\n        this.currentPlaylist.shots.forEach((entity) => {\r\n          const playlistEntity = this.convertEntityToPlaylistFormat(entity)\r\n          if (playlistEntity) tmpEntities[playlistEntity.id] = playlistEntity\r\n        })\r\n      }\r\n      this.$nextTick(() => {\r\n        this.currentEntities = tmpEntities\r\n      })\r\n    },\r\n\r\n    convertEntityToPlaylistFormat (entityInfo) {\r\n      let entity\r\n      if (this.isAssetPlaylist) {\r\n        entity = this.assetMap[entityInfo.id]\r\n      } else {\r\n        entity = this.shotMap[entityInfo.id]\r\n      }\r\n      if (entity) {\r\n        const playlistEntity = {\r\n          id: entityInfo.id,\r\n          name: entity.name,\r\n          parent_name: entity.sequence_name || entity.asset_type_name,\r\n          preview_files: entityInfo.preview_files,\r\n          preview_file_id:\r\n            entityInfo.preview_file_id ||\r\n            entity.preview_file_id,\r\n          preview_file_extension:\r\n            entityInfo.preview_file_extension ||\r\n            entity.preview_file_extension,\r\n          preview_file_task_id:\r\n            entityInfo.task_id ||\r\n            entityInfo.preview_file_task_id ||\r\n            entity.preview_file_task_id,\r\n          preview_file_annotations:\r\n            entityInfo.preview_file_annotations ||\r\n            entity.preview_file_annotations,\r\n          preview_file_previews:\r\n            entityInfo.preview_file_previews ||\r\n            entity.preview_file_previews\r\n        }\r\n        return playlistEntity\r\n      } else {\r\n        return null\r\n      }\r\n    },\r\n\r\n    setCurrentPlaylist (callback) {\r\n      const playlistId = this.$route.params.playlist_id\r\n      const playlist = this.playlistMap[playlistId]\r\n      if (playlist) {\r\n        this.loading.playlist = true\r\n        this.loadPlaylist({\r\n          playlist,\r\n          callback: (err, playlist) => {\r\n            if (err) console.error(err)\r\n            this.currentPlaylist = playlist\r\n            this.rebuildCurrentEntities()\r\n            this.loading.playlist = false\r\n            if (callback) callback()\r\n          }\r\n        })\r\n      } else {\r\n        this.currentPlaylist = {\r\n          name: ''\r\n        }\r\n        this.currentShots = {}\r\n      }\r\n    },\r\n\r\n    addEntity (entity) {\r\n      return this.loadEntityPreviewFiles(entity)\r\n        .then(previewFiles => {\r\n          return this.addToStorePlaylistAndSave(previewFiles, entity)\r\n        })\r\n        .then(this.addToPlayerPlaylist)\r\n        .catch((err) => console.error(err))\r\n    },\r\n\r\n    addToStorePlaylistAndSave (previewFiles, entity) {\r\n      return this.pushEntityToPlaylist({\r\n        playlist: this.currentPlaylist,\r\n        previewFiles: previewFiles,\r\n        entity: { ...entity }\r\n      })\r\n    },\r\n\r\n    addToPlayerPlaylist (entity) {\r\n      const playlistEntity = this.convertEntityToPlaylistFormat(entity)\r\n      this.currentEntities[playlistEntity.id] = playlistEntity\r\n      this.playlistPlayer.entityList.push(playlistEntity)\r\n      this.$nextTick(() => {\r\n        this.playlistPlayer.scrollToRight()\r\n      })\r\n    },\r\n\r\n    addEntityToPlaylist (entity) {\r\n      if (!this.currentEntities[entity.id]) {\r\n        this.addEntity(entity)\r\n          .then(this.playlistPlayer.scrollToRight())\r\n      }\r\n    },\r\n\r\n    removeEntity (entity) {\r\n      this.removeEntityPreviewFromPlaylist({\r\n        playlist: this.currentPlaylist,\r\n        entity,\r\n        callback: () => {\r\n          delete this.currentEntities[entity.id]\r\n        }\r\n      })\r\n    },\r\n\r\n    clearCurrentPlaylist () {\r\n      this.currentPlaylist = {}\r\n      this.currentShots = {}\r\n    },\r\n\r\n    resetPlaylist () {\r\n      this.clearCurrentPlaylist()\r\n      this.setCurrentPlaylist()\r\n    },\r\n\r\n    // Addition Helpers\r\n\r\n    addCurrentSelection () {\r\n      this.$options.silent = true\r\n      const entities =\r\n        this.isAssetPlaylist ? this.displayedAssets : this.displayedShots\r\n      this.addEntities([...entities].reverse(), () => {\r\n        this.$options.silent = false\r\n      })\r\n    },\r\n\r\n    addSequence (sequenceShots) {\r\n      if (sequenceShots.length > 0) {\r\n        const sequenceId = sequenceShots[0].sequence_id\r\n        const shots = Object.values(this.shotMap)\r\n          .filter(s => s.sequence_id === sequenceId)\r\n          .sort(firstBy('name'))\r\n          .reverse()\r\n        this.$options.silent = true\r\n        this.addEntities(shots, () => {\r\n          this.$options.silent = false\r\n        })\r\n      }\r\n    },\r\n\r\n    addAllPending () {\r\n      this.$options.silent = true\r\n      this.loading.addWeekly = true\r\n      this.getPending(false)\r\n        .then((shots) => {\r\n          this.addEntities(shots.reverse(), () => {\r\n            this.loading.addWeekly = false\r\n            this.$options.silent = false\r\n          })\r\n        })\r\n    },\r\n\r\n    addDailyPending () {\r\n      this.loading.addDaily = true\r\n      this.$options.silent = true\r\n      this.getPending(true)\r\n        .then((shots) => {\r\n          this.addEntities(shots.reverse(), () => {\r\n            this.loading.addDaily = false\r\n            this.$options.silent = false\r\n          })\r\n        })\r\n    },\r\n\r\n    addEpisodePending () {\r\n      this.loading.addEpisode = true\r\n      this.$options.silent = true\r\n      const shots = [].concat(...this.shotsByEpisode).reverse()\r\n      this.addEntities(shots, () => {\r\n        this.loading.addEpisode = false\r\n        this.$options.silent = false\r\n      })\r\n    },\r\n\r\n    addMovie () {\r\n      this.loading.addMovie = true\r\n      this.$options.silent = true\r\n      const shots = Object.values(this.shotMap)\r\n      this.addEntities(shots.reverse(), () => {\r\n        this.loading.addMovie = false\r\n        this.$options.silent = false\r\n      })\r\n    },\r\n\r\n    addEntities (entities, callback) {\r\n      if (entities && entities.length > 0) {\r\n        const entity = entities.pop()\r\n        this.addEntity(entity)\r\n          .then(() => {\r\n            this.addEntities(entities, callback)\r\n          })\r\n      } else {\r\n        callback()\r\n      }\r\n    },\r\n\r\n    // Save data\r\n\r\n    onPreviewChanged (entity, previewFileId) {\r\n      this.changePlaylistPreview({\r\n        playlist: this.currentPlaylist,\r\n        entity,\r\n        previewFileId\r\n      })\r\n    },\r\n\r\n    onOrderChange (info) {\r\n      this.changePlaylistOrder({\r\n        playlist: this.currentPlaylist,\r\n        info\r\n      })\r\n    },\r\n\r\n    onAnnotationChanged ({ preview, annotations }) {\r\n      const taskId = preview.task_id\r\n      this.updatePreviewAnnotation({ taskId, preview, annotations })\r\n    },\r\n\r\n    // Search\r\n\r\n    confirmBuildFilter (query) {\r\n      this.modals.isBuildFilterDisplayed = false\r\n      this.$refs['search-field'].setValue(query)\r\n      this.onSearchChange(query)\r\n    },\r\n\r\n    onSearchChange (searchQuery) {\r\n      if (searchQuery.length > 1) {\r\n        if (this.isAssetPlaylist) {\r\n          this.setAssetSearch(searchQuery)\r\n          this.displayMoreAssets()\r\n        } else {\r\n          this.setShotSearch(searchQuery)\r\n          this.displayMoreShots()\r\n        }\r\n      } else {\r\n        if (this.isAssetPlaylist) {\r\n          this.setAssetSearch('')\r\n        } else {\r\n          this.setShotSearch('')\r\n        }\r\n      }\r\n    },\r\n\r\n    // Playlist list\r\n\r\n    onForClientChanged (forClient) {\r\n      this.editPlaylist({\r\n        data: {\r\n          id: this.currentPlaylist.id,\r\n          for_client: forClient\r\n        }\r\n      })\r\n    },\r\n\r\n    runAddPlaylist (form) {\r\n      const newPlaylist = {\r\n        name: form.name,\r\n        production_id: this.currentProduction.id,\r\n        for_client: form.for_client,\r\n        for_entity: form.for_entity,\r\n        is_for_all: form.is_for_all\r\n      }\r\n      if (this.isTVShow && this.currentEpisode) {\r\n        newPlaylist.episode_id = this.currentEpisode.id\r\n      }\r\n      this.loading.editPlaylist = true\r\n      this.errors.editPlaylist = false\r\n      this.newPlaylist(newPlaylist)\r\n        .then((playlist) => {\r\n          this.$router.push(this.getPlaylistPath(playlist.id))\r\n          this.loading.editPlaylist = false\r\n          this.modals.isEditDisplayed = false\r\n        })\r\n        .catch((err) => {\r\n          console.error(err)\r\n          this.errors.editPlaylist = true\r\n          this.loading.editPlaylist = false\r\n        })\r\n    },\r\n\r\n    confirmEditPlaylist (form) {\r\n      if (this.playlistToEdit.id) {\r\n        form.id = this.currentPlaylist.id\r\n        this.runEditPlaylist(form)\r\n      } else {\r\n        this.runAddPlaylist(form)\r\n      }\r\n    },\r\n\r\n    runEditPlaylist (form) {\r\n      this.loading.editPlaylist = true\r\n      this.errors.editPlaylist = false\r\n      this.editPlaylist({\r\n        data: {\r\n          id: form.id,\r\n          for_client: form.for_client,\r\n          for_entity: form.for_entity,\r\n          name: form.name\r\n        },\r\n        callback: (err, playlist) => {\r\n          if (err) this.errors.editPlaylist = true\r\n          this.loading.editPlaylist = false\r\n          this.modals.isEditDisplayed = false\r\n          Object.assign(this.currentPlaylist, playlist)\r\n        }\r\n      })\r\n    },\r\n\r\n    goFirstPlaylist () {\r\n      if (this.playlists.length > 0) {\r\n        this.$router.push({\r\n          name: 'playlist',\r\n          params: {\r\n            production_id: this.currentProduction.id,\r\n            playlist_id: this.playlists[0].id\r\n          }\r\n        })\r\n      } else {\r\n        this.$router.push(this.playlistsPath)\r\n      }\r\n    },\r\n\r\n    // Changes\r\n\r\n    toggleAddEntities () {\r\n      if (this.isAddingEntity) {\r\n        this.resetPlaylist()\r\n      }\r\n      this.isAddingEntity = !this.isAddingEntity\r\n    },\r\n\r\n    onTaskTypeChanged (taskTypeId) {\r\n      this.changePlaylistType({\r\n        playlist: this.currentPlaylist,\r\n        taskTypeId,\r\n        callback: () => {\r\n          this.rebuildCurrentEntities()\r\n        }\r\n      })\r\n    },\r\n\r\n    onBodyScroll (event, position) {\r\n      const maxHeight =\r\n        this.$refs.entityListContent.scrollHeight -\r\n        this.$refs.entityListContent.offsetHeight\r\n      if (maxHeight < position.scrollTop) {\r\n        if (this.isAssetPlaylist) {\r\n          this.displayMoreAssets()\r\n        } else {\r\n          this.displayMoreShots()\r\n        }\r\n      }\r\n    },\r\n\r\n    resetSorting () {\r\n      let order = 1\r\n      if (['created_at', 'updated_at'].includes(this.currentSort)) {\r\n        order = -1\r\n      }\r\n      this.sortedPlaylists = [...this.playlists]\r\n        .sort(\r\n          firstBy(this.currentSort, order)\r\n            .thenBy('name')\r\n        )\r\n    },\r\n\r\n    // Modals\r\n\r\n    showAddModal () {\r\n      this.playlistToEdit = {\r\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\r\n        for_client: false\r\n      }\r\n      this.$refs['edit-playlist-modal'] = true\r\n      this.modals.isEditDisplayed = true\r\n    },\r\n\r\n    showEditModal () {\r\n      this.playlistToEdit = this.currentPlaylist\r\n      this.modals.isEditDisplayed = true\r\n    },\r\n\r\n    hideEditModal () {\r\n      this.playlistToEdit = {\r\n        name: `${moment().format('YYYY-MM-DD HH:mm:ss')}`,\r\n        for_client: false\r\n      }\r\n      this.modals.isEditDisplayed = false\r\n    },\r\n\r\n    // Loading\r\n\r\n    reloadAll () {\r\n      if (!this.loading.playlists) {\r\n        this.loading.playlists = true\r\n        this.loadShotsData(() => {\r\n          this.loadAssetsData()\r\n            .then(() => {\r\n              this.loadPlaylistsData(() => {\r\n                this.loading.playlists = false\r\n                this.resetPlaylist()\r\n                setTimeout(() => {\r\n                  this.loading.playlistsInit = false\r\n                }, 300)\r\n              })\r\n            })\r\n        })\r\n      }\r\n    }\r\n  },\r\n\r\n  mounted () {\r\n    // Next tick needed to ensure that current production is properly set.\r\n    this.$nextTick(() => {\r\n      this.reloadAll()\r\n      if (localStorage.getItem('playlist-sort')) {\r\n        this.currentSort = localStorage.getItem('playlist-sort')\r\n      }\r\n      this.resetSorting()\r\n    })\r\n  },\r\n\r\n  watch: {\r\n    $route () {\r\n      this.setCurrentPlaylist()\r\n    },\r\n\r\n    currentPlaylist () {\r\n      if (this.currentPlaylist.shots) {\r\n        this.isAddingEntity =\r\n          Object.keys(this.currentPlaylist.shots).length === 0\r\n      } else {\r\n        this.isAddingEntity = true\r\n      }\r\n    },\r\n\r\n    currentProduction () {\r\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\r\n      this.reloadAll()\r\n    },\r\n\r\n    currentEpisode () {\r\n      this.$store.commit('LOAD_PLAYLISTS_END', [])\r\n      if (this.currentEpisode) {\r\n        this.reloadAll()\r\n      }\r\n    },\r\n\r\n    playlists () {\r\n      this.resetSorting()\r\n    },\r\n\r\n    currentSort () {\r\n      localStorage.setItem('playlist-sort', this.currentSort)\r\n      this.resetSorting()\r\n    }\r\n  },\r\n\r\n  socket: {\r\n    events: {\r\n      'playlist:new' (eventData) {\r\n        if (!this.playlistMap[eventData.playlist_id]) {\r\n          this.refreshPlaylist(eventData.playlist_id)\r\n        }\r\n      },\r\n\r\n      'playlist:update' (eventData) {\r\n      },\r\n\r\n      'playlist:delete' (eventData) {\r\n        this.$store.commit('DELETE_PLAYLIST_END', {\r\n          id: eventData.playlist_id\r\n        })\r\n      },\r\n\r\n      'build-job:new' (eventData) {\r\n        if (eventData.playlist_id === this.currentPlaylist.id) {\r\n          this.currentPlaylist.build_jobs = [{\r\n            id: eventData.build_job_id,\r\n            created_at: eventData.created_at,\r\n            status: 'running',\r\n            playlist_id: this.currentPlaylist.id\r\n          }].concat(this.currentPlaylist.build_jobs)\r\n        }\r\n      },\r\n\r\n      'build-job:update' (eventData) {\r\n        if (eventData.playlist_id === this.currentPlaylist.id) {\r\n          updateModelFromList(this.currentPlaylist.build_jobs, {\r\n            id: eventData.build_job_id,\r\n            status: eventData.status\r\n          })\r\n        }\r\n      },\r\n\r\n      'build-job:delete' (eventData) {\r\n        if (eventData.playlist_id === this.currentPlaylist.id) {\r\n          this.currentPlaylist.build_jobs =\r\n            removeModelFromList(this.currentPlaylist.build_jobs, {\r\n              id: eventData.build_job_id\r\n            })\r\n        }\r\n      }\r\n    }\r\n  },\r\n\r\n  metaInfo () {\r\n    if (this.isTVShow) {\r\n      return { title: this.tvShowPageTitle }\r\n    } else {\r\n      return { title: this.shortPageTitle }\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.dark {\r\n  .playlist-item {\r\n    background: $dark-grey-lightmore;\r\n    box-shadow: 0px 0px 6px #333;\r\n    border-color: $dark-grey;\r\n    color: $white-grey;\r\n\r\n    &.for-client {\r\n      background: $purple-grey;\r\n      border: 1px solid $dark-grey;\r\n    }\r\n\r\n    &.selected {\r\n      border-right: 3px solid $dark-green;\r\n    }\r\n  }\r\n\r\n  .playlist-list-column {\r\n    background: $dark-grey-light;\r\n    border-color: $dark-grey;\r\n    box-shadow: 0px 0px 6px #333;\r\n  }\r\n\r\n  .playlist-column {\r\n    button,\r\n    h2.entity-group-title {\r\n      color: white;\r\n    }\r\n  }\r\n\r\n  .playlist-column.no-selection {\r\n    background: $dark-grey-light;\r\n\r\n    h2 {\r\n      color: white;\r\n    }\r\n\r\n    .recent-playlist {\r\n      background: $dark-grey-lightmore;\r\n      border: 2px solid $dark-grey;\r\n      box-shadow: 0px 0px 6px #333;\r\n\r\n      h3 {\r\n        color: white;\r\n      }\r\n    }\r\n  }\r\n\r\n  span.thumbnail-picture {\r\n    box-shadow: 0px 0px 6px #333;\r\n  }\r\n}\r\n\r\n.page {\r\n  display: flex;\r\n  padding-left: 0;\r\n  padding-right: 0;\r\n  padding-bottom: 0;\r\n}\r\n\r\n.page .columns {\r\n  margin-top: 0px;\r\n  margin-bottom: 0;\r\n  overflow-y: auto;\r\n  flex: 1;\r\n}\r\n\r\n.playlist-list-column {\r\n  max-width: 300px;\r\n  background: #F4F5F9;\r\n  overflow-y: auto;\r\n  padding: 1em 1em 1em 2em;\r\n  border-right: 1px solid #DDD;\r\n  box-shadow: 0px 0px 6px #F0F0F0;\r\n  z-index: 201;\r\n}\r\n\r\n.playlist-item {\r\n  display: block;\r\n  background: white;\r\n  padding: 0.4em;\r\n  margin: 0.2em;\r\n  border: 1px solid $white-grey;\r\n  box-shadow: 0px 0px 6px #DDD;\r\n  color: $grey-strong;\r\n\r\n  &.for-client {\r\n    background: $light-purple;\r\n    border: 1px solid $purple;\r\n  }\r\n}\r\n\r\n.playlist-item.selected {\r\n  border-right: 3px solid $light-green;\r\n}\r\n\r\n.playlist-list-column .button {\r\n  width: 100%;\r\n}\r\n\r\n.addition-entities {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-items: flex-start;\r\n  flex-direction: row;\r\n  max-width: 100%;\r\n  padding-left: 1em;\r\n}\r\n\r\n.addition-shot {\r\n  padding: 0;\r\n  cursor: pointer;\r\n  text-align: center;\r\n  margin: 0;\r\n  opacity: 0.5;\r\n  width: 170px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border: 0px solid transparent;\r\n\r\n  a {\r\n    margin: auto;\r\n  }\r\n\r\n  &:hover {\r\n    opacity: 0.75\r\n  }\r\n\r\n  &.playlisted {\r\n    opacity: 1;\r\n\r\n    img,\r\n    span.thumbnail-picture {\r\n      border: 2px solid $purple;\r\n    }\r\n  }\r\n}\r\n\r\nspan.thumbnail-picture {\r\n  box-shadow: 0px 0px 6px #DDD;\r\n  margin-bottom: 2px;\r\n}\r\n\r\n.addition-header {\r\n  padding: 0 1em;\r\n\r\n  .subtitle {\r\n    margin-top: 1em;\r\n  }\r\n}\r\n\r\n.add-sequence {\r\n  margin-bottom: 0.4em;\r\n}\r\n\r\n.playlist-column {\r\n  padding: 0;\r\n  overflow: hidden;\r\n  flex: 1;\r\n}\r\n\r\n.playlisted-shot-name {\r\n  padding-right: 20px;\r\n}\r\n\r\n.playlist-date {\r\n  display: block;\r\n  color: $grey;\r\n  font-size: 0.8em;\r\n}\r\n\r\n.entity-group-title {\r\n  border-bottom: 1px solid $light-grey-light;\r\n  color: $grey;\r\n  margin: 1em;\r\n  padding-bottom: 0.2em;\r\n  text-transform: uppercase;\r\n\r\n  button {\r\n    color: $grey;\r\n    padding: 0.3em 0.8em;\r\n    font-size: 0.7em;\r\n  }\r\n}\r\n\r\n.addition-header {\r\n  height: 110px;\r\n}\r\n\r\n.addition-section {\r\n  overflow-y: auto;\r\n  height: calc(100% - 420px);\r\n}\r\n\r\nh2 {\r\n  font-weight: bold;\r\n  text-transform: uppercase;\r\n  color: $grey;\r\n}\r\n\r\n.playlist-column.no-selection {\r\n  padding: 2em;\r\n  overflow: auto;\r\n  background: #F4F5F9;\r\n\r\n  h2 {\r\n    font-size: 2em;\r\n    margin-top: 1.5em;\r\n    margin-bottom: 0.3em;\r\n  }\r\n\r\n  .recent-playlist {\r\n    width: 333px;\r\n    height: 250px;\r\n    background: white;\r\n    border: 2px solid $light-grey-light;\r\n    box-shadow: 0px 0px 6px #DDD;\r\n    border-radius: 1em;\r\n    padding: 1em;\r\n\r\n    h3 {\r\n      color: $grey-strong;\r\n      font-size: 1.2em;\r\n      font-weight: bold;\r\n    }\r\n    span {\r\n      display: block;\r\n    }\r\n  }\r\n\r\n  .empty-explaination {\r\n    margin-top: 4em;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  .big {\r\n    font-size: 1.2em;\r\n    margin-top: 1em;\r\n    padding: 0.5em 1em;\r\n    height: auto;\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Playlist.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Playlist.vue?vue&type=template&id=6698cc74&scoped=true&\"\nimport script from \"./Playlist.vue?vue&type=script&lang=js&\"\nexport * from \"./Playlist.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Playlist.vue?vue&type=style&index=0&id=6698cc74&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6698cc74\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}